@model WebShop.Models.ProductViewModel

@using (Html.BeginForm("UpdateProduct", "Product", FormMethod.Post, new { Id = "FormCreateOrEditProduct", @class = "form-horizontal", data_success = "Successful operation", data_failure = "The operation could not be performed" }))
{
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.SaveInMemory)
    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "col-md-2" })
        <div class="col-md-12">
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control mw-100" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Number, new { @class = "col-md-2" })
        <div class="col-md-12">
            @Html.TextBoxFor(m => m.Number, new { @class = "form-control mw-100", @type = "number", @min=0, @step=1, @max=int.MaxValue })
            @Html.ValidationMessageFor(m => m.Number, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Price, new { @class = "col-md-2" })
        <div class="col-md-12">
            @Html.TextBoxFor(m => m.Price, new { @class = "form-control mw-100", @type = "number", @min=0, @step=1, @max=int.MaxValue })
            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <h5>Save in memory</h5>
    <div class="btn-group btn-group-toggle" data-toggle="buttons">
        <label class="btn btn-info">
            <input type="radio" name="saveInMemoryRadio" id="MemoryStorageRadioButton"> Yes
        </label>
        <label class="btn btn-info active">
            <input type="radio" name="saveInMemoryRadio" checked> No
        </label>
    </div>
}